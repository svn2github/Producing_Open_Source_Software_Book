#    -*- mode: org -*-

Archived entries from file /home/kfogel/src/producingoss/todo.org

* DONE Build system fixes (re thread with Wolf):
  :PROPERTIES:
  :ARCHIVE_TIME: 2013-04-24 Wed 08:07
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_CATEGORY: poss
  :ARCHIVE_TODO: DONE
  :END:
  1) Make build system work smoothly on live site.
  2) Make it show syntax errors when there are any, so
     translators can diagnose and fix without having to have 
     Docbook Lite running locally.

* DONE (r2898) Forced proprietary relicensing for mobile app stores.
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-01-30 Sat 15:43
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_CATEGORY: poss
  :ARCHIVE_TODO: DONE
  :END:
  From: Nathan Toone
  Subject: [KNOTSPAM] Suggestion for book
  To: Karl Fogel
  Date: Sat, 27 Jun 2015 12:17:33 -0600
  
  I have been reading the updates to your book - and have a suggestion,
  particularly for the page in chapter 10 about Proprietary Relicensing
  Schemes: http://producingoss.com/en/proprietary-relicensing.html
  
  In this section, you come down pretty hard (and rightly so - I can
  see your arguments) *AGAINST* doing proprietary relicensing - but
  there are some licenses (GPL in particular - and I would guess most
  copyleft licenses in general) whose terms make them unable to be
  distributed in mobile app stores (Apple/Android/etc.).
  
  It might be worth a section there to discuss the issues surround that
  - and what suggestions you may have in that situation.  Your
  arguments against doing dual licensing are completely valid, but
  personally, I have worked on a project that wanted to be
  GPL-licensed, and we ended up having to do a dual-license scheme and
  collect CLAs for the specific purpose of being able to distribute the
  application on app stores.
  
  Some links that we used to help us navigate this issue were:
  http://www.engadget.com/2011/01/09/the-gpl-the-app-store-and-you/
  https://bonsansnom.wordpress.com/2011/01/08/
  about-apple-store-gpls-vlc-and-betrains/
  
  No specific or personal response to me is needed…I just thought I’d
  make a suggestion that might be helpful in the update for your
  (wonderful, amazing, helpful, invaluable, superb, <insert other
  adjective here>) book!
  
  I may hop on IRC some time this week and try and ping you - in case
  this email doesn’t come through…or feel free to reach me by email or
  #toonetown on freenode.
  
  -Nathan

* Mention Gabriella Coleman's book in preface or appendix or somewhere.
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-01-30 Sat 16:17
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: poss
  :END:

* In Chapter 7, update for JavaScript projects and other
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-01-30 Sat 17:06
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: poss
  :END:
  continuous development / auto-deployment situations.
  Also, commit IDs as release numbers, in certain circumstances.

* Ask Ben Reser and Hyrum Wright if they'll review Chapter 7?
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-01-30 Sat 17:19
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: poss
  :END:

* Ask Ben Reser to review "Announcing Security Vulnerabilities"
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-01-30 Sat 17:19
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: poss
  :END:
  in Chapter 6, to make sure I'm not missing anything important.

* DONE (r2903) Tell readers that SaaS-on-open-source-software is a thing.
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-01-30 Sat 17:36
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: poss
  :ARCHIVE_TODO: DONE
  :END:
  In Jenn Brandel's words:
  "Wanted to remind you (before I forget!) for you to note the
  software / service difference re: the dual licensing section of
  your book.  Just to make the distinction that there's no problem in
  charging for a service built on open source code."
  See also: http://nucivic.com/opensaas-future-government-innovation/

* DONE (r2903) Minor consistency fixes (easy):
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-01-30 Sat 17:44
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: poss
  :ARCHIVE_TODO: DONE
  :END:
  - "codebase" not "code base"
  - in todo notes, use "poss2" not "possv2"

* DONE (r2903) Mention other OSS forge platforms, alongside Gitorious, etc.
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-01-30 Sat 17:50
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: poss
  :ARCHIVE_TODO: DONE
  :END:
  - http://kallithea-scm.org/ (no hosting sites as of [2016-01-30],
    so not listing it in this edition.  Hopefully next edition!)
  - Phabricator.org.  Michael Akinde says to look at this blog post:
    http://blogs.gnome.org/aklapper/2014/05/19/wikimedia-phabricator/

* http://cia.vc no longer exists
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-01-30 Sat 17:56
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas/Bugs reported by Gerhard Poul
  :ARCHIVE_CATEGORY: poss
  :END:

* Google Code Hosting now supports git
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-01-30 Sat 17:56
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas/Bugs reported by Gerhard Poul
  :ARCHIVE_CATEGORY: poss
  :END:

* DONE (r2903) Linux release numbering has since changed
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-01-30 Sat 17:57
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas/Bugs reported by Gerhard Poul
  :ARCHIVE_CATEGORY: poss
  :ARCHIVE_TODO: DONE
  :END:

* typo "Public list mailing list"?
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-01-30 Sat 17:57
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas/Bugs reported by Gerhard Poul
  :ARCHIVE_CATEGORY: poss
  :END:

* MySQL history needs to be updated as the fork already happened.
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-01-30 Sat 17:58
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas/Bugs reported by Gerhard Poul
  :ARCHIVE_CATEGORY: poss
  :END:

* In the eBook (read the ePUB I converted to MOBI) the Fossil
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-01-30 Sat 17:58
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas/Bugs reported by Gerhard Poul
  :ARCHIVE_CATEGORY: poss
  :END:
  section refers to itself instead of veracity; this doesn't seem to
  be a problem in the HTML version that is currently on the web,
  though, so may also be a conversion issue.

* Bugs reported by Gerhard Poul
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-01-30 Sat 17:59
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: poss
  :END:
** http://cia.vc no longer exists
** Google Code Hosting now supports git
** DONE (r2903) Linux release numbering has since changed
** typo "Public list mailing list"?
** MySQL history needs to be updated as the fork already happened.
** In the eBook (read the ePUB I converted to MOBI) the Fossil
   section refers to itself instead of veracity; this doesn't seem to
   be a problem in the HTML version that is currently on the web,
   though, so may also be a conversion issue.

* Search for everywhere "freecode" is mentioned, see if still right.
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-01-30 Sat 18:02
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: poss
  :END:

* Check for "opensource.org/licenses/*", fix to use SPDX URLs.
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-01-30 Sat 18:02
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: poss
  :END:

* Make sure the book recommends copyright ownership for new code.
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-01-30 Sat 18:02
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: poss
  :END:
  Check if this is covered in legal chapter or elsewhere.

* Dreamwidth
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-01-30 Sat 18:03
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: poss
  :END:

* Comb Jono Bacon's book again for topic coverage.
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-01-30 Sat 18:03
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: poss
  :END:

* Check with Mike on status of EPL-2.0, re "license-choosing" in Ch. 10.
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-01-30 Sat 18:05
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: poss
  :END:

* GitHub, bug trackers update
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-01-30 Sat 18:05
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: poss
  :END:

* See Mel Chua's mails
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-01-30 Sat 18:05
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: poss
  :END:

* From Wolf
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-01-30 Sat 18:06
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: poss
  :END:
  Date: Tue, 02 Oct 2012 17:23:34 +0200
  Hi Karl,
  here you predict it, now it's become true ;-)
  > (no Git, at least not yet)
  http://producingoss.com/en/web-site.html#canned-hosting-choosing
  ...but I think this should be updated.
** note that web-based presentation of diffs on Google Code is
   thought ugly by some; compare to SF or GitHub.  GitHub has
   commenting on commits (line-based if nessesary!), though, and it's
   fast too.

* Check out Simon's columns, of course.
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-01-30 Sat 18:07
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: poss
  :END:

* "Open source policy no guarantee governments will actually use open source" from FierceGovIT
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-01-30 Sat 18:07
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: poss
  :END:

* Mark Atwood re Open Stack
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-01-30 Sat 18:07
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: poss
  :END:

* Android as a model.  (See also TDF call notes.)
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-01-30 Sat 18:07
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: poss
  :END:

* Cornelius Schumacher volunteered to discuss KDE.
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-01-30 Sat 18:09
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: poss
  :END:
* DONE Formatting sanity check:
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-02-06 Sat 17:01
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: todo
  :ARCHIVE_TODO: DONE
  :END:
  Everywhere the '<phrase output="printed"> in ...</phrase>' trick is
  used, make sure there is appropriate spacing around the "in".

* DONE (r2825) Importance of real-life events (conferences, code sprints, hackathons, etc)
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-02-06 Sat 17:07
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: todo
  :ARCHIVE_TODO: DONE
  :END:
  From http://keimform.de/2007/freie-software-produzieren/ (translated):
  What is also missing, the importance of real-life events, ie
  conferences, code sprints, Doc sprints, work camps, etc. From my
  perspective and experience are such meetings for the social process
  in an active community is very important.


* DONE Dustin Mitchell's comments:
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-02-06 Sat 17:15
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: todo
  :ARCHIVE_TODO: DONE
  :END:
  https://plus.google.com/u/0/105883044168332773236/posts/GPEj7Rm4C3w
  (must be signed in w/ personal gmail address to see it)
    
  The relevant, and presumably non-confidential, part of his comment:

  "The first edition addresses topics generally, with specifics
  geared toward the kinds of projects Karl was familiar with.  That
  leaves other types of projects -- weekend hacks, single-author
  projects with a non-technical userbase, or corporate-sponsorted
  projects, for example -- reading between the lines for advice."

  To the extent I can address this, it is addressed now in the 2nd edition.

* DONE Noel Hidalgo suggests camps, cons, hackathons, and kickstarting:
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-02-06 Sat 17:17
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: todo
  :ARCHIVE_TODO: DONE
  :END:
  I'd love to see a section in "kick starting" FOSS software & how     
  social media plays an impact within these communities. Additionally, 
  camps, cons, & hackathons should have their own chapter. Knowing how 
  physical engagement plays into online engagement is critical.
 
  Re kickstarting: interview Joey Hess?  Who else?

* DONE The problem isn't money, it's monopoly.
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-02-06 Sat 17:31
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: todo
  :ARCHIVE_TODO: DONE
  :END:
  Add a section about the distinction between commercial use and
  proprietary use.  See email of [2014-10-06] with Subject line 
  "License question" and MID <87oatpdwbb.fsf@ktab.red-bean.com>.

* DONE "Bus Factor"
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-02-07 Sun 17:03
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: todo
  :ARCHIVE_TODO: DONE
  :END:
  (suggested by Philip Olson <philip {_AT_} roshambo.org>, later a KS pledger)
  This is done now, see r2665.  However, Philip is thanked in r2842.
  Some cross-linking should be done.

* DONE (r2823, r2825) "Community editions" vs "commercial edition" terminology rant.
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-02-07 Sun 17:06
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: todo
  :ARCHIVE_TODO: DONE
  :END:
  Was a star note at the top of Chapter 10 (Legal).  But is that
  chapter the right place for that?
  ch05.xml:"Enterprise Edition").  Aside from the fact that everyone knows there

* DONE (r2914) SFLC copyright management guide:
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-02-07 Sun 17:12
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: todo
  :ARCHIVE_TODO: DONE
  :END:
  http://softwarefreedom.org/resources/2012/ManagingCopyrightInformation.html

* DONE (r2915) Improvements to sections about security procedures
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-02-07 Sun 17:43
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: todo
  :ARCHIVE_TODO: DONE
  :END:
** breser points out don't use email to submit security bugs
   <breser> Pushing the ASF to stop using email to submit security issues.
  
   <breser> https://secsubmit.apache.org/
  
   * kfogel looks
  
   <breser> ^ That doesn't go anywhere yet so don't use it.
    
   <breser> I didn't build that Humbedoh did but in response to my
            suggestion at Apache Con
    
   <kfogel> That reminds me that I need to update that section of my
            book, to say the same thing.  Email is obviously the wrong
            way to transmit this kind of information.
    
   <breser> Ohh it's a fine way if both sides know how to deal with PGP.
    
   <breser> The problem is most don't.
    
   <breser> And in the case of an open source project they have to
            encrypt to multiple people.
    
   <breser> That is partly out of my annoyance at the ASF security team's
            behavior of taking encrypted mail, decrypting it and then
            posting it to the security/private list for a project.
    
   <kfogel> yeah -- I really think PGP/GPG is great but only in certain
            limited use cases
    
   <kfogel> I mean, unless everyone's going to set up Schleuder, but even
            then it's not a perfect win
    
   <breser> Feel free to weigh in here:
            http://mail-archives.apache.org/mod_mbox/www-infrastructure-dev/201404.mbox/%3C5357F5D6.1020209%40cord.dk%3E
    
   <kfogel> Nah, I don't think I'm likely to have a uniquely valuable
            opinion that's not already being better represented by
            someone taking more active part in the discussion
    
   <kfogel> Do you mind if I record a snapshot of this part of our
            conversation in a book-notes file that's publicly visible (to
            those who know where to look)?  I also have a private notes
            file I can use, if not.
    
   <breser> Go right ahead, nothing sensitive here.
** jorendorff's question about read access to security bugs,
   apparently an internal debate at Mozilla citing
   http://blog.gerv.net/2011/12/a-level-playing-field/ which cites POSS
   story about Mike Pilato and commit access.  See IRC transcript
   in #red-bean of 2012-08-15.

* DONE (r2660) From Wolf Peuker
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-02-07 Sun 17:57
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: todo
  :ARCHIVE_TODO: DONE
  :END:
  Date: Tue, 02 Oct 2012 10:58:11 +0200
    
  First, I was working on the IRC section, there was a list of
  open source pastebin sites (gray box):
   http://producingoss.com/en/irc.html
  What do you think on Gist https://gist.github.com/ as run by GitHub?
  Is it popular? Should it be in the list?
    
  Second, I translated RSS section into German. There were some readers
  mentioned. I think modern mail clients or browsers can be used to.
  I don't know if it's really popular, but I read RSS only within
  Thunderbird, my mail client. Should this be made explicit?

* David Eaves's "Science of Community Management"
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-02-07 Sun 18:25
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: todo
  :END:
  http://eaves.ca/2012/11/15/making-bug-fixing-more-efficient-and-pleasant-this-made-me-smile/
  http://www.youtube.com/watch?v=TvteDoRSRr8

* Matt Doar suggests stackoverflow-type forums, shared spreadsheets, etc.
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-02-07 Sun 18:25
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: todo
  :END:
  I'd like to see forums and stackoverflow-like sites referred to as
  well as mailing lists
 
  For bug trackers, a paragraph on why email and shared spreadsheets
  such as Google Docs don't usually work well enough for this purpose.
 
  Fields such as as priority and severity should always be clearly
  described or arguments break out when their values get changed

* Inner-sourcing, "community source", and other half-source things
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-03-19 Sat 20:35
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: todo
  :END:
  Inner sourcing isn't really like open source: the actors are
  ultimately all part of the same hierarchical authority structure, so
  true permissionless initiative is hard to achieve, and it also fails
  the "portable résumé" test -- you can't take the code with you, so
  you can still be alienated from your work, so some of the motivation
  to invest personally is gone.

* DONE How to handle the worry about offering infinite support
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-03-20 Sun 15:15
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: todo
  :ARCHIVE_TODO: DONE
  :END:
  (Already covered in "Dispel Myths Within Your Organization".)

  Many orgs (esp non-profits and gov't customers and their
  contractors) worry about the degree to which they might be required
  to engage & meet expectations of third parties, e.g., in responding
  to questions in public forums, in meeting roadmap deadlines, feature
  goals, etc.  This is especially true when the project is open source
  from the start.  Answer is to clearly define & agree on what
  obligations are: paying customers come first, and then make a
  conscious choice about controlling the other costs.

  Explicitly follow up in public forums to say "We're heads-down
  working on features right now [or whatever], but there was this
  thread from so-and-so a few months ago that might have an answer.
  [link] So-and-so, do you have anything to add?"  over to community
  experts.

  "You open source your code, not your time and attention."

  (But see reference in notes.org to Koen van Daele's email 
  "Re: Arches" in Aug/Sep 2012, for an argument the other way.)

* In Ch. 3, "Bug Tracker", maybe talk about how the bug tracker is
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-03-20 Sun 16:11
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: todo
  :END:
  as important to watch as the repository?

* "Ask Slashdot: Where Do You Get (or Share) News About Open Source Projects?"
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-03-20 Sun 16:29
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: todo
  :END:
  http://developers.slashdot.org/story/14/07/26/2238223/ask-slashdot-where-do-you-get-or-share-news-about-open-source-projects?utm_source=rss1.0mainlinkanon&utm_medium=feed
  Answer: Latest site is http://freshcode.club/, and it looks good,
  but times have changed since freshmeat and freecode.  Although I
  might use the site as a reference or news source now, it's not
  really that important that people try to get their new releases
  posted -- rather, it's important to freshcode.club but not to the
  projects.  So there's no reason to mention it in the book.

* DONE CDT spam report dead link bug filed (for link in Chapter 3).
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-03-20 Sun 16:37
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas/Do a general link check.
  :ARCHIVE_CATEGORY: todo
  :ARCHIVE_TODO: DONE
  :END:
  Latest update: they're supposed to let me know whether the link can
  now be relied on (see thread in "cdt" mail folder).
 
  Filed this via https://www.cdt.org/contact on [2013-12-18]:

  Hi.  The page
  https://www.cdt.org/pr_statement/cdt-releases-new-report-origins-spam
  links to three pages under "Supporting Documents", all of which get
  "Page Not Found" errors:
 
    http://cdt.org/speech/spam/
    http://cdt.org/speech/spam/030319spamreport.shtml
    http://cdt.org/speech/spam/030319spamreport.pdf
 
  Can that spam report be restored to the CDT web site and the links fixed?
 
 Thank you,
 -Karl Fogel

* DONE Do a general link check.
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-03-20 Sun 18:30
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: todo
  :ARCHIVE_TODO: DONE
  :END:
** DONE Check where http:// URLs can be https://, use the latter where possible.

* DONE In Chapter 3 "Mailing List / Message Forum Software", list Discourse.
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-03-20 Sun 18:44
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: todo
  :ARCHIVE_TODO: DONE
  :END:

* DONE In Ch. 6, many examples use rev IDs rather than commit IDs.
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-03-20 Sun 18:59
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: todo
  :ARCHIVE_TODO: DONE
  :END:
  The principle is the same either way, but will readers be thrown by
  the syntax?  Would be good to at least point out that "commit FOO"
  means the same thing, and that the details of the syntax are not as
  important as *having* a syntax.

* DONE In Ch. 6, many examples use rev IDs rather than commit IDs.
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-03-20 Sun 18:59
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Content ideas
  :ARCHIVE_CATEGORY: todo
  :ARCHIVE_TODO: DONE
  :END:
  The principle is the same either way, but will readers be thrown by
  the syntax?  Would be good to at least point out that "commit FOO"
  means the same thing, and that the details of the syntax are not as
  important as *having* a syntax.

* Chapter 1 (Andy Oram)
  :PROPERTIES:
  :ARCHIVE_TIME: 2017-01-05 Thu 18:40
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Andy Oram comments
  :ARCHIVE_CATEGORY: todo
  :END:
  By the way, for both the preface and some marketing material, we need
  to list the main changes to the new edition.

  I guess the opening ("Most free software projects fail.") seemed like
  a powerful statement when we put out the first edition, but this time
  I worry a bit about starting out with negatives. What about the
  stoned-soup miracle of seeing value created out of many small
  contributions by many strangers? What about the joys of community (as
  one finds, for instance, at DebConf)? What about the uncorruptible and
  unbreakable persistence of a project that meet people's needs? I would
  start with a page about those and then move to failure.
   
  Right at the beginning: "We tend not to hear very much about the
  failures..." This paragraph seems longer than necessary. You make a
  good point, but make it in two sentences and move on.
   
  List of myths and causes of failure, pages 1-2: Consider adding a bit
  of structure, perhaps through a variablelist: open source as panacea,
  lack of packaging, lack of active management, etc.
   
  Page 3: "some adjustments will usually be needed." Who has to adjust?
  The risk-averse organization, or the open source developers?
   
  Page 6: about BSD. Although that projects produced a lot of critical
  code still in widespread use, and OSes that powered a lot of projects,
  the organizations producing the various OSes diverged from what we now
  see as good free software practices, and the projects suffered. (The
  fragmentation and forks were symptoms of that.) I don't think you need
  to go into all that in Chapter 1, but it might be a useful topic for
  later chapters. If you don't mind getting the flames.
   
  X Windows: I'd rather not use a sloppy term, particularly because MS
  trademarked Windows. You could just give the full name once and then
  call it X.
   
  Page 7: "of course it always cost less." This could trigger complaints
  about the complicated TCO problem. It might be more accurate to say
  "of course, people with some computing skill could always use it
  reduce their software costs."
   
  A big addition to your Chapter 1 history: the renewed popularity of
  SaaS in the 1990s (it has existed in some form for decades, of course)
  presents a new challenge that the FSF responded to quickly and that
  your chapter needs to cover. It can take up just a few paragraphs, but
  there are a lot of subtleties. The counter-intuitive fact is that free
  software has flourished more and more as SaaS grows. I would like to
  see people adopt the term "closed core" to describe the phenomenon. I
  introduced that term in 2011:
   
  http://radar.oreilly.com/2011/12/could-closed-core-prove-a-more.html
   
  You already described the phenomenon earlier, to explain why companies
  invest in open source, but this is a bit of an extra twist.

* Chapter 2 (Andy Oram)
  :PROPERTIES:
  :ARCHIVE_TIME: 2017-01-06 Fri 17:42
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Andy Oram comments
  :ARCHIVE_CATEGORY: todo
  :END:
  Pages 11-12: Some of this material perhaps should not be right at the
  beginning of the chapter. Basically, how to present yourself to the
  outside world is a secondary or tertiary topic. The chapter contains
  other, more basic issues such as whether to create a new project in
  the first place.

  [I modified the intro quite a bit, but kept the ordering.  I think
  presentation is important enough to come first.  -Karl]
   
  Pages 11-12, concerning the look of the web site: It might be worth
  mentioning that sophisticated projects usually include an introductory
  video. Many developers haven't gotten used to the video culture yet (I
  imagine that young ones have, though), and it's worth highlighting the
  availability of some kind of video presentation because it takes a lot
  of work but seems to have a big payoff. (Of course, the topic is also
  appropriate for Chapter 6, Communications.)
   
  [Looks like I did this in r2585, back in 2013.  I'm comfortable
  with where it's discussed, later in this chapter. -Karl]
   
  Starting From What You Have, Pages 12-13: you introduce a number of
  requirements here quite quickly: a mission statement, a well-organized
  code tree, etc. Some of these are explained later, which is fine. But
  the presentation here is a welter of partially related concepts. I
  tend to like tidiness, so I go for variable lists laying out each
  requirement precisely (you can still follow up later with more
  information). Even if you don't use a variable list, think carefully
  about what you're asking the reader to do and be clear what the
  requirements are. You may well discover that some requirement--for
  instance, code tree--needs more explanation later in the chapter.
   
  [Considered it, but I like the way it flows now, and worry that it
  would look too much like a technical manual if I switched it to a
  variable list.  This kind of "variable list disguised as a long
  prose passage broken up with headings" was actually my desired
  effect; I realize it might not be to everyone's taste, of course.
  -Karl]

  Choose a Good Name: no changes to suggest, but I have an interesting
  story to tell. I visited the George Eastman home in Rochester and
  heard how he created the name Kodak. Already in 1888 he was thinking
  globally, and he wanted a simple word whose pronunciation would be
  obvious to anyone who was familiar with Roman letters. The name had no
  other meaning.
   
  [I'd heard that story, yeah!  Clever.  Would have been more clever
  if they'd noticed the digital camera revolution in time, but can't
  have everything I guess :-).  Cough cough.  -Karl]

  Alpha and Beta, page 17: I believe that Alpha releases are usually
  free to evolve and change the APIs and functionality, where Beta
  releases aren't supposed to so except in cases of dire necessity. That
  is also worth mentioning.
   
  [Very good point.  Fixed.  -Karl]

  Communications Channels (page 19): I would say a little here about
  choosing good terms that aid in SEO. Be aware of what people search
  for, what similar projects use, what terms are used by projects you
  want to interface with, etc.
   
  [Is this related to Communications Channels?  I wasn't sure how to
  fit it in here.  Also, although it is good advice, it's not really
  specific to open source projects, and people hopefully should be
  able to figure this out on their own.  If they don't know that
  basic principle of web communication, I'm not sure this book can
  help them.  -Karl]

  Developer Guidelines, page 20; I would mention codes of conduct in
  this section, because you don't get to them until page 29.
   
  [Done.  -K]

  Documentation, page 21: Nowadays, much documentation is stored as a
  wiki to make it easy for contributors to change it. This might be
  worth mentioning. (You mention a wiki under "Hosting" later.) Some
  sites don't want to make the documentation too open to change, but
  sometimes it's a good way to get users involved.
   
  [Seems to be already handled.  -K]

  "If users interact with your code primarily over a network": sidebar,
  page 25: Almost any software is liable to be used by people over a
  network, I think. Whatever is useful to users is likely to be
  incorporated by someone into a SaaS service for those users. Think of
  a compiler or interpretor, for instance. Doesn't look like web
  software, but don't sites offer text boxes where you can paste in and
  run code?

  [I've clarified the text there.  -K]
   
  Code of Conduct: "It is always up to the project leadership, by which
  I mean those whom others in the project tend to listen to the most, to
  see to it that a code of conduct is used wisely." (page 30) It's also
  up to leadership to enforce the code, taking action as soon as a
  violation is noticed.

  [Adjusted text accordingly.  -K]
   
  Practice Conspicuous Code Review and Case study (pages 30-31): should
  these be in the Getting Started chapter? I think they could wait till
  a later chapter. Perhaps it could go in Chapter 4, Social and
  Political Infrastructure. If it's a different level of activity from
  Chapter 4, it could probably fit somewhere in Chapter 5, perhaps as a
  sub-section of Open Source and the Organization.

  [It's certainly a judgement call, but I think it belongs here
  in "Setting the Tone" because that's one of its most important
  effects (separate from improving the quality of the code).  -K]
   
  Be Open From Day One (pages 32-33) and Opening a Formerly Closed
  Project (pages 33-34: I would reorganize these a little. You give
  three problems in these sections with closed projects that go open: 1)
  there are hidden proprietary elements to be stripped out; 2) opening
  the code creates a big unnecessary event, 3) there are cultural and
  managerial practices that make it hard for developers and the company
  as a whole to convert. I'd describe those things as subsections of "Be
  Open From Day One." Then the section "Opening a Formerly Closed
  Project" can be shortened and can focus on anticipating and fixing the
  cultural problems.
   
  [I think I may have done this already?  At any rate, the problems
  described above don't seem to me to be present anymore, and the
  latter section does now link back to the former in the ways I would
  expect.  -Karl]

  Announcing (pages 35-36): Here, again, I'd remind the reader to choose
  SEO-appropriate terms that will cause searches to work well.

  [Okay, despite my earlier aversion to discussing SEO explicitly,
  I've put a note about it here, as well as updating some out-of-date
  material about generic announcement sites.  -K]

* Chapter 9 (Andy Oram)
  :PROPERTIES:
  :ARCHIVE_TIME: 2017-01-06 Fri 21:16
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Andy Oram comments
  :ARCHIVE_CATEGORY: todo
  :END:
  AGPL (pages 195-196): I believe the idea for this license historically
  arose as discussions were just beginning for the GPL 3, and some
  participants (perhaps even including RMS) wanted the GPL 3 to include
  the critical clause. Pushback from others who were less hostile to
  cloud services (which didn't even have that name then) led to a split
  between the GPL 3 and the AGPL. I am not sure of this, but it's my
  recollection. I don't know whether it's worth mentioning.

  [I think the history is interesting personally, but not relevant
  enough to readers to include.  -K]

* Chapter 8 (Andy Oram)
  :PROPERTIES:
  :ARCHIVE_TIME: 2017-01-06 Fri 22:05
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Andy Oram comments
  :ARCHIVE_CATEGORY: todo
  :END:
  Politics (page 162): a valuable enough point to be a section or
  sidebar.
   
  [Thanks.  I considered it, but generally I prefer to use sidebars
  for definitions or for discrete thoughts that are, at least in
  theory, separable from the main body of text around them.  The
  point about politics made here seems to me to be connected enough
  to the rest of the section that I'd like to keep it part of the
  section.  -Karl]

  Automated testing (pages 168-170): Is it worth mentioning test-driven
  development, just as a process used by many projects?
   
  [I'm inclined not to.  There are too many methodologies to mention
  each one, and I'm not convinced that TDD is more relevant to open
  source than it is to any other kind of software project.  I did
  update this section to discuss unit testing as well as regression
  testing, though. -K]

  Meeting in Person (page 172): I'm glad you keep this short, instead of
  entering deeply into a big topic. It may be worth referring to Jono's
  book The Art of Community for detail, because he has the subject
  nicely covered. One topic you might want to devote a couple sentences
  to, though, is the cost of attending. The project may want to sponsor
  certain people and perhaps run votes or use some other system to
  determine who gets a scholarship.

  [I thought about it, and reviewed what Jono says there.  It's good
  material, but I think it doesn't connect well with what's here.
  The cost issue will present itself fairly clearly to anyone who's
  actually budgeting for one of these, so I don't think I need to
  spend space on it here.  If I discuss the benefits, then the reader
  can weigh those against the costs -- they don't need me to tell
  them that there are costs :-).  -Karl]
   
  Documentation manager (pages 175-176): you have come to my favorite
  topic, of course. We can't teach people here how to write readable and
  actionable documentation. But there is one thing I would like to
  suggest including: good documentation puts things together in usable
  sequences for people. It doesn't just explain each option or call in
  isolation. When something change, the first task of the documentation
  people is add or change the necessary information about that
  individual feature, but then something should try to go through
  tutorials or other documents and try to think of the ripple effects of
  the change. Entire procedures that are currently documented may be no
  longer necessary.

  [I added a paragraph about this.  Thanks!  -K]

* Chapter 7 (Andy Oram)
  :PROPERTIES:
  :ARCHIVE_TIME: 2017-01-06 Fri 23:10
  :ARCHIVE_FILE: ~/src/producingoss/todo.org
  :ARCHIVE_OLPATH: Andy Oram comments
  :ARCHIVE_CATEGORY: todo
  :END:
  Road repair metaphor (page 142): I love this metaphor, and will think
  of it the next time I'm crawling along Route I95. But you might be
  unnecessarily pessimistic. Do parallel development tracks really
  discomfort anybody? Open source projects maintain a clean, stable
  release while creating a new branch (or several) to work on
  updates. Why say that everybody slows down in order to allow
  development to proceed in parallel?
   
  [Yep, it definitely slows it down.  I can supply examples without
  end :-).  If stabilizing release branches had no cost, there would
  never be discussion or dissent about creating them.  In practices,
  there are costs and they are usually noticeable to all developers
  (especially in open source projects).  -K]

  "Since the first edition of this book..." (footnote, page 144): Don't
  talk about the differences between the first and second editions in
  this book, unless you have a critical point to make. (For instance,
  you can distinguish between editions if you offered advice in the
  first edition that is invalid in the second because of changes in the
  environment.) I don't think this footnote is needed. Say in the text
  what's current, bring everything up to date.
   
  [Got rid of the edition comment, but kept the footnote.  -K]

  Major, minor, patch (page 145): Explain the sometimes fluid difference
  between these concepts first. Then explain how the canonical
  three-part numbering scheme reflects those concepts. Currently, you
  do the opposite: describing the scheme before the meaning.
   
  [Too hard to reverse the order -- it's a good idea, but it also
  introduces problems of its own.  I'm sort of counting on the fact
  that only people seriously concerned with getting version numbers
  right will even read this section, and those people are the sort of
  reader for whom presenting the scheme first and then tying it to
  the concepts will work okay.  -K]

  "...regular development work happens..." (page 148): I am confused
  about the difference between the main branch and the others. What is
  "irregular" about working in another branch? You need to distinguish
  the different work performed on different branches.
   
  [Fixed, thank you.  -K]

  "...fairly strict branch management..." (footnote, page 149): I don't
  know what this is. Hopefully, an earlier section defined what you mean
  by "strict branch management." You have to indicate what you mean by
  this. Is it just maintaining branches for each type of work and making
  sure each commit goes to the branch where it should go?
   
  [Explained it better, thanks.  -K]
   
  Digital signing (page 157): this may need a little more
  explanation. Even I, who have a general sense of how the web of trust
  works with GPG, am confused about how average users will use it to
  reach the developers who signed the release. Do you expect people to
  build up enough personal connections to make use of the web of trust?
   
  [I can't fully explain it in this book, as it's too big a topic,
  but mention it earlier now and have added pointers to some
  resources.  -K]

  "The purpose of all this signing and checksumming..." (page 157): I
  like to put purposes near the beginning of the section, not the end,
  because you are explaining why this section is important to read.
   
  [Good point!  Handled in the above change.  -K]

  Planning Releases (pages 160-161): Back in Chapter 5 (as well as in
  one of your ORM reports) you discuss the strategy of doing work in a
  separate branch to ensure a company can release what customers want on
  time, and then merging it back into the open project. Couldn't that be
  done here? It's not a complete substitute for getting what you want
  into the open project, but it's an alternative.
   
  [Ah, thanks for noticing the connection.  Done.  -K]

  Jeffersons' University (page 161): Is this an ethical and appropriate
  model for persuading free software developers to support one person's
  plan? Suppose Jefferson really had a stupid idea? Wouldn't you want
  free-wheeling discussion before anything is "set in stone" as you call
  it? Of course, before anyone makes a suggestion, it's always good to
  do some research and present a clear plan about its feasibility, but
  the purposes isn't to railroad discussion.
   
  [I made a minor modification to emphasize that the plan should be a
  good one, but yes, basically, I think this is an ethical and
  appropriate model.  IMHO freewheeling discussion is rarely good *in
  the specific case of planning releases of an open source project*.
  It's good in many other situations, just not that one.  -K]
