     Oh Most Noble and Gracious Emacs, please be in -*- org -*- mode!

This is where pending todo items for the 2nd edition live.

If something you expected to see here is missing, the omission may not
be intentional, or that may be one of the todo items kept in a private
file (because it comes from a confidential suggestion -- the result
will be public, but the information leading to the result is private).
See also the notes.org file, which contains ideas and notes and stuff
that may be actionable some day but that I don't consider to be "todo"
items right now.

* Andy Oram comments
** TODO Chapter 5 (Andy Oram)
   Lots more comments on this chapter than usual, including a
   suggested name change and some reorganization.

   This chapter doesn't hang together as well as the previous ones. I
   feel that, using the unifying thread of money, you throw together a
   bunch of issues that perhaps don't really go together.
   
   Most of the chapter could go better under the title "Participating as
   a Business or Government Agency." The current title reflects the
   fuzziness of the topics in the chapter. When you talk of
   organizations, you make it sound like the chapter covers
   infrastructure, which was the topic of Chapter 4. And if you talk
   about money, people will think you'll talk about fund-raising, and
   then you have to explicitly say you won't. (Actually, you have one
   section about it; Crowdfunding and Bounties. Perhaps there's another
   chapter that could go in.)
   
   [Made the title change.  I kept the disclaimer about fund-raising,
   though, because so many people think this book is going to explain
   that that I feel it's necessary to put a notice, in the place
   they're most likely to look, that it's not going to do that.  -K]

   I think that most of the chapter could stay together with the new
   title I suggested. A few other changes would follow:
   
   * The "Funding Non-Programming Activities" section might be worth
     rethinking. You could orient it around "things that need to get done
     and nobody enjoys doing" instead of money. Perhaps it should be
     broken up. Quality assurance may fit well in this chapter, whereas
     conferences might go elsewhere. Marketing is also a topic that goes
     beyond the question of who pays.
   
     [I don't know... I re-read it in context, and while there is a
     certain slightly-random quality to its placement, it fits well
     enough and I can't think of anywhere more appropriate to put this
     stuff.  I did add one more item, about donating security audits,
     and perhaps the presence of another item in the list will help
     justify the list more.  -K]

   * Don't Bash Competing Open Source Products and Don't Bash Competing
     Vendor's Developers look like communications issues, not business
     issues. They could go in the communicatiosn chapter. Of course, I
     just recommended that you bash the BSD projects...
   
     [ :-)  I moved the former to Chapter 6, but kept the latter here
     (albeit renamed), because the latter is more about corporate
     commercial behavior than about developer communications.   -K]

   * Foster Pools of Expertise in Multiple Places seems like a topic for
     another chapter too. (I'm not sure which one, maybe Chapter 4.)
   
     [Hmm, no, I think this really is about organizations and how they
     interact with open source projects, and therefore belongs here.
     It's not about fostering multiple sources of expertise *within* the
     project; it's about fostering multiple sources of expertise to
     provide support for a user of the project.  -K]

   * Establish contact early with relevant communities: looks like a
     Chapter 4 topic.
   
     [There's a stronger case here for moving it, but I still think it
     belongs here more than in Chapter 4.  Again, this is primarily
     about how a centralized organization should use its resources to
     make an open source project succeed.  -K]

   Now, on to comments about specific sections:
   
   Augmenting services (page 84): there may be a better term for this
   item. It's more like "Ensuring maintenance of infrastructure" because
   the open source project is infrastructure for the company.
   
   [Agreed; fixed.  -K]

   Donations (page 85): this should not be here, because it's not a
   motivation for supporting an open source project.
   
   [Yeah, weird, why did I even have it there?  I've just removed it.  -K]

   "In addition to..." (page 86): I think you intended this paragraph to
   be broken into a list, and for some reason the formatting didn't
   happen. It should be a variable list.
   
   [Yup, good call.  Done.  -K]

   "disclaimer" (page 90): Again, this is a disclosure.
   
   [Fixed again, thanks.  -K]

   Benevolent Dictator (page 91): I like your point in this paragraph,
   but I suspect it's rarely followed. My impression is that if a company
   starts a free software project or takes control of the funding for
   one, the company keeps final say to itself. I believe that's true at
   Canonical, for instance. (On the other hand, in Providing
   Hosting/Bandwidth you suggest that some companies do the
   opposite--they try to milk a project for good PR without really
   participating.)
   
   [I've tweaked the conclusion of the paragraph to bend it in the
   direction of your point slightly.  -K]

   "Will other developer resent..." (page 92): I think there may be
   another issue to consider (although this section is already rather
   long): not so much resentment as confusion about what types of
   development are worth paying for. Probably the company should explain
   why it chose to pay for a certain feature instead of just going
   through the consensus-building process (which it has to do anyway to
   get the feature accepted). Probably the company has a deadline to meet
   a customer demand, and that's worth stating. Otherwise, contributors
   who work for free may wonder whether they could get the company to pay
   for their work.
   
   [Usually companies do state this, and hopefully the reader will
   remember the advice from "Be Open About Your Motivations"   -K]

   "Update Your RFI..." (pages 93-94): I can tell that each of the points
   in your list is based on real abuses that companies carried out in
   government work. That might be worth mentioning.
   
   [Done, thanks.  -K]

   Dirk Reiners quote: Could you ask him what he means by "His case was
   even better"? What "case" is this? Better than what?
   
   [I removed that second paragraph from the quote; it wasn't
   necessary anyway. -K]

   Total cost of ownership (page 101): Another point is that the costs of
   proprietary software tend to outstrip open source if you look ahead
   long enough. I remember how the city of Munich did a TCO analysis that
   looked five years into the future, and decided that MS Office was
   cheaper than OpenOffice.org. (They switched anyway, as I'm sure you
   know.) But five years is an artificial cut-off point--the costs of MS
   Office keep getting more out of line over the years. (This discussion
   is also relevant to the item "Open source is cheaper" on page 105, so
   I'm not sure whether it's worth including in one place or the other.)
   
   [Added that point in.  Thank you.  -K]

   Dispel Myths Within Your Organization (pages 104 ff.): Perhaps divide
   these into unfairly positive myths and unfairly negative myths. Then
   people can anticipate what you're criticizing. Here is three other
   myths worth citing: 1) Open source is less secure, because malicious
   users can peruse the code. 2) All bugs are shallow. 3) We can casually
   copy open source code into our code.
   
   [Good ideas all -- done.   -K]

   Foster Pools of Expertise in Multiple Places, page 106: Is it worth
   talking here about certifications, such as LPI? I don't know what you
   think of them. Most American programmers (at least in open source)
   scoff at certifications, but they're a big deal in Japan, Brazil, and
   some other places.
   
   [I don't think I know enough about them to talk usefull about them.
   -K]

   Don't Let Publicity Events Drive Project Schedule (pages 107-108): the
   last paragraph discourages companies from forcing communities into
   pre-planned schedules. But several successful projects, notably
   Ubuntu, do that. I think this paragraph may be overly idealistic.
   
   [This is really an example of everyone -- Canonical and the Ubuntu
   community -- being on board with time-based releases.  I've
   adjusted the text to mention this exception.  -K]

   The Key Role of Middle Management (page 108): It might be worth
   explaining the typical relationship between a manager and an open
   source project. Perhaps a manager has a one-to-one relatioship with a
   project: she's responsible for the company's contribution to the
   project and is really a member of the open source project
   herself. That's a relatively simple scenario. I suspect that often a
   manager is in charge of some internal corporate project that is not
   open source, and is also directly responsible for programmers working
   part-time or full-time on an open source project. That's more
   difficult and takes a lot sensitivity on the part of both the managers
   and the programmers.
   
   [  -K]

   Innersourcing (pages 109-110): Although we agree that this is a timely
   topic that should be in the book, it sticks out as unrelated to the
   rest of the chapter. The chapter is about business, but that doesn't
   mean this section goes with the others. It might be better as either a
   sidebar or its own appendix. One way to integrate the section with
   this chapter better is talk about innersourcing as a stepping stone on
   the way to open sourcing, or as a follow-up to doing open source
   projects that train the company in open source processes.
   
   [  -K]

   Hiring Open Source Developers (page 110): In the Huawei report, you
   ramped up very nicely by discussing why a company would want to hire
   developers with a particular expertise, and then how to do it. A
   couple paragraphs here about the benefits of hiring developers out of
   an open source community would be helpful--although you also discuss
   hiring new programmers to join the community.
   
   [  -K]

   Evaluating Open Source Projects (page 110): You might mention the term
   "project maturity," which appeared in a companion book to yours: Open
   Source for Businesses.

   [  -K]
* Web site and build infrastructure
** BUG: DocBook->PDF via FOP continually breaks, totally unmaintainable.
   Wow, I'm so tired of this.  In theory, DocBook is convertible to PDF.
   In practice, you need a team of NASA scientists to get it working.
   At least, the method used in 'lang-makefile' here, with Apache FOP,
   has never stayed working for more than a year at a time as far as I
   can remember.  http://www.dpawson.co.uk/docbook/tools.html has some
   alternatives; search for "Off the top of my head, I know of the
   following ways to transform DocBook XML into PDF, with open
   source/free/semi-free software".  See also
   http://www.scons.org/doc/HTML/scons-user.html#b-DocbookPdf,
   and http://lwn.net/Articles/661778/ re 'dblatex'.
** BUG: Why is the output="printed" conditional not working?
   For example, in Chapter 8 there is this conditional:
 
     (see <xref linkend="trademarks"/><phrase output="printed">
     in <xref linkend="legal"/></phrase>)
   
   and yet the HTML output produces (with links, of course) this...
 
     (see the section called “Trademarks” in Chapter 10, Licenses,
     Copyrights, and Patents),
 
   ...in en/forks.html.  What's up with that?
** BUG: compatibility links don't produce .html files.
   When id="mailing-lists" changed to id="message-forums" in ch03.xml,
   we left an <anchor id="mailing-lists" /> in place for compatibility.
   However, that still doesn't produce mailing-lists.html, which means
   a bunch of links out on the Net will suddenly become obsolete.
   Solution is to find all the compatibility anchors and generate .html
   files that do a 301 redirect to the new link.
** BUG: Why are we getting this warning on every commit:
   "Warning: post-commit hook failed (exit code 1) with no output."
** Learn how to not include obsolete appendices in the PDF output.
** Explanation of POSS web site to ORM et al
   The online version has some properties that I'd like to maintain -- the
   most important is probably the human-readable anchor names, for example:
   
     http://producingoss.com/en/forks.html#forks-handling
   
   It's not just that they're human-readable, it's that they stay stable no
   matter how content moves around.  I could move the material about forks
   to a completely different chapter, but the URL would stay the same (and
   when someone went to it directly online, they would automatically be in
   the right chapter when they got there, whatever chapter it is).
   
   Out on the Net, people refer to particular parts of the book using those
   section & anchor names.  So I can't afford to break those.
